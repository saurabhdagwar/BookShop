[{"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\index.js":"1","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\App.js":"2","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\reportWebVitals.js":"3","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\SignUp\\signUp.jsx":"4","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\LogIn\\LogIn.jsx":"5","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\dashBoard\\dashBoard.jsx":"6","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\protectedRoutes.js":"7","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Services\\productServices.js":"8","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Services\\userServices.js":"9","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\AppBar\\AppBar.jsx":"10","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\displayBooks\\displayBooks.jsx":"11","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\Footer\\footer.jsx":"12","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\OrderPlaced\\orderPlaced.jsx":"13","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\cart\\cart.jsx":"14","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Services\\axoisServices.js":"15","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\Pagination\\Pagination.jsx":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":630,"mtime":1611247699554,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":6213,"mtime":1611376722092,"results":"21","hashOfConfig":"18"},{"size":4702,"mtime":1611415521255,"results":"22","hashOfConfig":"18"},{"size":2229,"mtime":1611411790518,"results":"23","hashOfConfig":"18"},{"size":843,"mtime":1611247461924,"results":"24","hashOfConfig":"18"},{"size":1216,"mtime":1611381654558,"results":"25","hashOfConfig":"18"},{"size":368,"mtime":1610655067677,"results":"26","hashOfConfig":"18"},{"size":4147,"mtime":1611394011319,"results":"27","hashOfConfig":"18"},{"size":6189,"mtime":1611410211670,"results":"28","hashOfConfig":"18"},{"size":228,"mtime":1611409453539,"results":"29","hashOfConfig":"18"},{"size":1723,"mtime":1611413383421,"results":"30","hashOfConfig":"18"},{"size":12885,"mtime":1611385061513,"results":"31","hashOfConfig":"18"},{"size":391,"mtime":1611380205730,"results":"32","hashOfConfig":"18"},{"size":733,"mtime":1611555111859,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"x95que",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\index.js",[],["74","75"],"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\App.js",["76","77"],"import logo from './logo.svg';\r\nimport {BrowserRouter,Route,Switch,Redirect} from 'react-router-dom'\r\nimport SignUp from \"./Components/SignUp/signUp\"\r\nimport Login from \"./Components/LogIn/LogIn\"\r\nimport Dashboard from \"./Components/dashBoard/dashBoard\"\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter >\r\n      <Switch>\r\n     <Route path=\"/dashboard\" component={Dashboard} ></Route>\r\n     <Route path=\"/SignUp\" component={SignUp} exact/>\r\n     <Route path=\"/Login\" component={Login} exact/>\r\n     </Switch>\r\n     </BrowserRouter >\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\reportWebVitals.js",[],"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\SignUp\\signUp.jsx",[],"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\LogIn\\LogIn.jsx",[],"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\dashBoard\\dashBoard.jsx",["78"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"../AppBar/AppBar\";\r\nimport Books from \"../displayBooks/displayBooks\";\r\nimport Services from \"../../Services/productServices\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ProtectedRoutes from \"../../protectedRoutes.js\";\r\nimport PlacedOrder from \"../OrderPlaced/orderPlaced\";\r\nimport Footer from '../Footer/footer'\r\nimport Cart from \"../cart/cart\";\r\n\r\nconst services = new Services();\r\nconst useStyles = makeStyles((theme) => ({\r\n  dashboardMain: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [show, setShow] = React.useState(false);\r\n  const [cartBooks, setCartBooks] = React.useState([]);\r\n  const [orderPlaced, setOrderPlaced] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    allCartItem();\r\n  }, []);\r\n\r\n  const nextPath = (e, path) => {\r\n    e.stopPropagation();\r\n    props.history.push(path);\r\n  };\r\n\r\n  const allCartItem = () => {\r\n    services\r\n      .getCartItem()\r\n      .then((data) => {\r\n        console.log(data.data.result);\r\n        setCartBooks(data.data.result);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dashboardMain}>\r\n      <AppBar\r\n        totalCartItem={cartBooks.length}\r\n        nextPath={nextPath}\r\n        setShow={setShow}\r\n      />\r\n      \r\n      <Switch>\r\n        <Route path=\"/dashboard\" exact>\r\n          <Books cartBooks={cartBooks} allCartItem={allCartItem}/>\r\n        </Route>\r\n        <ProtectedRoutes path=\"/dashboard/cart\" exact>\r\n          <Cart\r\n            cartBooks={cartBooks}\r\n            allCartItem={allCartItem}\r\n            nextPath={nextPath}\r\n            setOrderPlaced={setOrderPlaced}\r\n          />\r\n        </ProtectedRoutes>\r\n        <ProtectedRoutes path=\"/dashboard/orderPlaced\" exact>\r\n          <PlacedOrder orderPlaced={orderPlaced} nextPath={nextPath} />\r\n        </ProtectedRoutes>\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\protectedRoutes.js",["79"],"import React, { Component } from 'react';\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nlet authenticated = false;\r\n\r\nconst  isAuthenticated = () => {\r\n    if(localStorage.getItem(\"bookStoreToken\") === null){\r\n      authenticated = false;\r\n    }\r\n    else{\r\n      authenticated = true;\r\n    }\r\n  return authenticated;\r\n}\r\n\r\nexport default function ProtectedRoutes({component: Component, ...rest}){\r\n    return (\r\n        <Route {...rest} render = {(props) => {\r\n            if(isAuthenticated()){\r\n                return <Component {...props}/>\r\n            }\r\n            else{\r\n                return <Redirect to = {\r\n                {    pathname: \"/login\",\r\n                    state: {\r\n                        from: props.location\r\n                    }}\r\n                } />\r\n            }\r\n            \r\n        }} />\r\n    )\r\n}","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Services\\productServices.js",[],"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Services\\userServices.js",[],"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\AppBar\\AppBar.jsx",["80"],"import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport logo from \"../../assets/education.svg\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: \"0 4px\",\r\n  },\r\n}))(Badge);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  AppBar: {\r\n    backgroundColor: \"#A03037\",\r\n  },\r\n  toolBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  leftOptions: {\r\n    display: \"flex\",\r\n    width: \"50%\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n  },\r\n  rightOptions: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"#ffff\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    color: \"gray\",\r\n    height: \"40px\",\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"70%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      justifyContent: \"flex-start\",\r\n    },\r\n  },\r\n  titleLogo: {\r\n    marginRight: \"10px\",\r\n  },\r\n  titleName: {\r\n    marginRight: \"20px\",\r\n    cursor: 'pointer',\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    color: \"gray\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  buttonSearch: {\r\n    display: \"none\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"block\",\r\n      marginRight: \"20px\",\r\n    },\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n \r\n  cartButton: {\r\n    fontSize: \"14px\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function Appbar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar className={classes.AppBar}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <div className={classes.leftOptions}>\r\n            <div className={classes.title}>\r\n              <img className={classes.titleLogo} src={logo} />\r\n              <Typography className={classes.titleName} variant=\"h6\" \r\n              onClick={(e) => props.nextPath(e, \"../dashboard\")}\r\n              >\r\n                Bookstore\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{ input: classes.inputInput }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.rightOptions}>\r\n            <SearchIcon className={classes.buttonSearch} />\r\n\r\n            <IconButton\r\n              className={classes.cartButton}\r\n              onClick={(e) => props.nextPath(e, \"../dashboard/cart\")}\r\n            >\r\n              <StyledBadge badgeContent={props.totalCartItem} className={classes.badge}>\r\n                <ShoppingCartOutlinedIcon />\r\n              </StyledBadge>\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\displayBooks\\displayBooks.jsx",["81","82","83"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Services from \"../../Services/productServices\";\r\nimport bookImg from \"../../assets/Image11.png\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport \"./displayBooks.css\";\r\nconst services = new Services();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bookName: {\r\n    fontSize: \"13px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  bookAuthor: {\r\n    fontSize: \"12px\",\r\n  },\r\n  bookQuantity: {\r\n    fontSize: \"12px\",\r\n  },\r\n  bookPrize: {\r\n    fontSize: \"13px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  addToBagButton: {\r\n    padding: \"3px 4px 3px 4px\",\r\n    margin: \"5px\",\r\n    width: \"85px\",\r\n    fontSize: \"11px\",\r\n    backgroundColor: \"#A03037\",\r\n    color: \"#ffff\",\r\n    borderRadius: \"2px\",\r\n  },\r\n  addedBagButton: {\r\n    backgroundColor: \"#1976D2\",\r\n    width: \"170px\",\r\n    margin: \"5px\",\r\n    color: \"#ffff\",\r\n    borderRadius: \"2px\",\r\n    fontSize: \"11px\",\r\n  },\r\n  wishListButton: {\r\n    padding: \"3px 4px 3px 4px\",\r\n    margin: \"5px\",\r\n    width: \"80px\",\r\n    fontSize: \"13px\",\r\n    borderRadius: \"2px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  optionSelect: {\r\n    padding: \"5px 5px\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayNotes(props) {\r\n  const classes = useStyles();\r\n  const [books, setBooks] = React.useState([]);\r\n  const [data, setData] = React.useState(0);\r\n  const [sort, setSort] = React.useState({ type: \"\" });\r\n  const [postsPerPage] = React.useState(8);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    getAllBooks();\r\n  }, []);\r\n\r\n  const getAllBooks = () => {\r\n    services\r\n      .getBooks()\r\n      .then((data) => {\r\n        setBooks(data.data.result);\r\n        setData(data.data.result);\r\n        books.map((data) => (data.isCart = false));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    setSort({\r\n      ...sort,\r\n      [name]: event.target.value,\r\n    });\r\n    console.log(sort.type);\r\n    switch (sort.type) {\r\n      case \"0\":\r\n        setBooks(data);\r\n        break;\r\n      case \"2\":\r\n        setBooks(data);\r\n        setBooks(books.sort((a, b) => (a.price > b.price ? 1 : -1)));\r\n        break;\r\n      case \"1\":\r\n        setBooks(data);\r\n        setBooks(books.sort((a, b) => (a.price > b.price ? -1 : 1)));\r\n        break;\r\n      case \"3\":\r\n        setBooks(data);\r\n        setBooks(books.reverse());\r\n        break;\r\n    }\r\n  };\r\n\r\n  const addedToBag = (e, data) => {\r\n    e.stopPropagation();\r\n    const id = data._id;\r\n    data.isCart = true;\r\n    services\r\n      .addToCart(id)\r\n      .then((data) => {\r\n        console.log(data);\r\n        props.allCartItem();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const indexOfLastBook = currentPage * postsPerPage;\r\n  const indexOfFirstBook = indexOfLastBook - postsPerPage;\r\n  const currentBooks = books.slice(indexOfFirstBook, indexOfLastBook);\r\n\r\n  return (\r\n    <div className=\"displayBook\">\r\n      <span className=\"topContent\">\r\n        <div>\r\n          Books <font className=\"bookSize\"> ({books.length} items) </font>{\" \"}\r\n        </div>\r\n        <div>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <Select\r\n              className={classes.optionSelect}\r\n              native\r\n              value={sort.type}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                name: \"type\",\r\n              }}\r\n            >\r\n              <option value={0}>Sort by relevance</option>\r\n              <option value={1}>Price: low to high</option>\r\n              <option value={2}>Price: high to low</option>\r\n              <option value={3}>Newest Arrival</option>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </span>\r\n      <div className=\"allBooks\">\r\n        {currentBooks.map((data) => (\r\n          <div className=\"bookContainer\">\r\n            {props.cartBooks.map((cart) => {\r\n              if (cart.product_id._id === data._id) {\r\n                data.isCart = true;\r\n              }\r\n            })}\r\n            <div className=\"imageContainer\">\r\n              <img className=\"bookImage\" src={bookImg} alt=\"\" />\r\n            </div>\r\n            <div className=\"infoContainer\">\r\n              <Typography className={classes.bookName}>\r\n                {data.bookName}\r\n              </Typography>\r\n              <Typography className={classes.bookAuthor}>\r\n                {data.author}\r\n              </Typography>\r\n              <Typography className={classes.bookQuantity}>\r\n                {data.quantity}\r\n              </Typography>\r\n              <Typography className={classes.bookPrize}>\r\n                Rs. {data.price}\r\n              </Typography>\r\n            </div>\r\n\r\n            {data.isCart ? (\r\n              <Button variant=\"contained\" className={classes.addedBagButton}>\r\n                Added To Bag\r\n              </Button>\r\n            ) : (\r\n              <div className=\"buttonContainer\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={(e) => addedToBag(e, data)}\r\n                  className={classes.addToBagButton}\r\n                >\r\n                  Add To Bag\r\n                </Button>\r\n                <Button variant=\"outlined\" className={classes.wishListButton}>\r\n                  WishList\r\n                </Button>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"descClass\">\r\n              <Typography className={classes.bookName}>Book Detail</Typography>\r\n              {data.description}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <Pagination\r\n          postsPerPage={postsPerPage}\r\n          totalPosts={books.length}\r\n          paginate={paginate}\r\n        ></Pagination>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\Footer\\footer.jsx",[],"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\OrderPlaced\\orderPlaced.jsx",[],"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\cart\\cart.jsx",["84","85","86","87","88","89"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Services from \"../../Services/productServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport bookImg from \"../../assets/Image11.png\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./cart.css\";\r\n\r\nconst services = new Services();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bookName: {\r\n    fontSize: \"13px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  bookAuthor: {\r\n    fontSize: \"12px\",\r\n  },\r\n  bookPrize: {\r\n    fontSize: \"13px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  countInput: {\r\n    border: \"1px lightgray solid\",\r\n    width: \"15%\",\r\n    height: \"30px\",\r\n  },\r\n  countButton: {\r\n    height: \"5px\",\r\n    margin: \"5px\",\r\n    border: \"1px solid lightgray\",\r\n    width: \"5px\",\r\n  },\r\n  placeButton: {\r\n    height: \"40px\",\r\n    position: \"relative\",\r\n  },\r\n  inputField: {\r\n    border: \"1px solid lightgray\",\r\n    borderRadius: \"5px\",\r\n    padding: \"5px\",\r\n  },\r\n  inputAdderss: {\r\n    border: \"1px solid lightgray\",\r\n    borderRadius: \"5px\",\r\n    padding: \"5px\",\r\n    minHeight: \"43px\",\r\n  },\r\n  radioGroup: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nexport default function Cart(props) {\r\n  const classes = useStyles();\r\n  const [books, setBooks] = React.useState();\r\n  const [detailForm, setDetailForm] = React.useState(false);\r\n  const [summaryField, setSummaryField] = React.useState(false);\r\n  const [value, setValue] = React.useState(\"Home\");\r\n\r\n  const [name, setName] = React.useState();\r\n  const [nameFlag, setNameFlag] = React.useState(false);\r\n  const [nameError, setNameError] = React.useState(\"\");\r\n  const [mobile, setMobile] = React.useState();\r\n  const [mobileFlag, setMobileFlag] = React.useState(false);\r\n  const [mobileError, setMobileError] = React.useState(\"\");\r\n  const [address, setAddress] = React.useState();\r\n  const [addressFlag, setAddressFlag] = React.useState(false);\r\n  const [addressError, setAddressError] = React.useState(\"\");\r\n  const [city, setCity] = React.useState();\r\n  const [cityFlag, setCityFlag] = React.useState(false);\r\n  const [cityError, setCityError] = React.useState(\"\");\r\n  const [state, setState] = React.useState();\r\n  const [stateFlag, setStateFlag] = React.useState(false);\r\n  const [stateError, setStateError] = React.useState(\"\");\r\n\r\n  const makeInitial = () => {\r\n    setNameFlag(false);\r\n    setNameError(\"\");\r\n    setAddressFlag(false);\r\n    setAddressError(\"\");\r\n    setMobileFlag(false);\r\n    setMobileError(\"\");\r\n    setCityFlag(false);\r\n    setCityError(\"\");\r\n    setStateFlag(false);\r\n    setStateError(\"\");\r\n  };\r\n\r\n  const removeItem = (e,data) => {\r\n    e.stopPropagation();\r\n    services.deleteCartItem(data._id)\r\n    .then((data)=> {\r\n      console.log(\"Successfully deleted\"+data);\r\n      props.allCartItem();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Error while removing\"+err)\r\n    })\r\n  }\r\n\r\n  const patternCheck = () => {\r\n    makeInitial();\r\n    const namePattern = /^[A-Z]{1}[a-z ]{3,}$/;\r\n    const mobilePattern = /^[6-9]{1}[0-9]{9}$/;\r\n    const addressPattern = /^[A-Za-z ]{5,}$/;\r\n    const cityPattern = /^[A-Za-z ]{3,}$/;\r\n    const statePattern = /^[A-Za-z ]{3,}$/;\r\n\r\n    let isError = false;\r\n\r\n    if (!namePattern.test(name)) {\r\n      setNameFlag(true);\r\n      setNameError(\"Name is Not Proper\");\r\n      isError = true;\r\n    }\r\n    if (!mobilePattern.test(mobile)) {\r\n      setMobileFlag(true);\r\n      setMobileError(\"Mobile Number is Not Proper\");\r\n      isError = true;\r\n    }\r\n    if (!addressPattern.test(address) || address == undefined) {\r\n      setAddressFlag(true);\r\n      setAddressError(\"Address is Not Proper\");\r\n      isError = true;\r\n    }\r\n    if (!cityPattern.test(city) || city == undefined) {\r\n      setCityFlag(true);\r\n      setCityError(\"Invalid City\");\r\n      isError = true;\r\n    }\r\n    if (!statePattern.test(state) || state == undefined) {\r\n      setStateFlag(true);\r\n      setStateError(\"Invalid state\");\r\n      isError = true;\r\n    }\r\n    console.log(\r\n      \"name \" +\r\n        name +\r\n        \"   mobile \" +\r\n        mobile +\r\n        \"   address \" +\r\n        address +\r\n        \"   state \" +\r\n        state +\r\n        \"   city \" +\r\n        city\r\n    );\r\n    return isError;\r\n  };\r\n\r\n  const Continue = () => {\r\n    if (patternCheck()) {\r\n      console.log(\"Error Occured\");\r\n    } else {\r\n      console.log(\"Success\");\r\n      setSummaryField(true);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const CartBooks = () => {\r\n    return (\r\n      <div className=\"cartItem\">\r\n        {props.cartBooks.map((data) => (\r\n          <div className=\"cartBookItem\">\r\n            <img className=\"cartBookImage\" src={bookImg} alt=\"\" />\r\n            <div className=\"infoContainer\">\r\n              <Typography className={classes.bookName}>\r\n                {data.product_id.bookName}\r\n              </Typography>\r\n              <Typography className={classes.bookAuthor}>\r\n                {data.product_id.author}\r\n              </Typography>\r\n              <Typography className={classes.bookPrize}>\r\n                Rs. {data.product_id.price}\r\n              </Typography>\r\n              <div className=\"countItem\">\r\n                <IconButton className={classes.countButton}>-</IconButton>\r\n                <InputBase\r\n                  className={classes.countInput}\r\n                  value={data.product_id.quantity}\r\n                />\r\n                <IconButton className={classes.countButton}>+</IconButton>\r\n                <Button onClick={(e) => {removeItem(e,data)} }>Remove</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const CheckoutItem = () => {\r\n    return (\r\n      <div className=\"cartItem\">\r\n        {props.cartBooks.map((data) => (\r\n          <div className=\"cartBookItem\">\r\n            <img className=\"cartBookImage\" src={bookImg} alt=\"\" />\r\n            <div className=\"infoContainer\">\r\n              <Typography className={classes.bookName}>\r\n                {data.product_id.bookName}\r\n              </Typography>\r\n              <Typography className={classes.bookAuthor}>\r\n                {data.product_id.author}\r\n              </Typography>\r\n              <Typography className={classes.bookPrize}>\r\n                Rs. {data.product_id.price * data.product_id.quantity}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const checkout = (e) => {\r\n    let order = [];\r\n    props.cartBooks.map((data) => {\r\n      let same = {\r\n        product_id: data.product_id._id,\r\n        product_name: data.product_id.bookName,\r\n        product_quantity: data.product_id.quantity,\r\n        product_price: data.product_id.price,\r\n      };\r\n      order.push(same);\r\n    });\r\n    let orderData = {\r\n      orders: order,\r\n    };\r\n    console.log(orderData);\r\n    services\r\n      .addOrder(orderData)\r\n      .then((data) => {\r\n        console.log(\"Successfully order Placed\" + JSON.stringify(data));\r\n        props.setOrderPlaced(data);\r\n        props.nextPath(e, \"../dashboard/orderPlaced\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error occured while placing order\" + err);\r\n      });\r\n      props.cartBooks.map((book) => removeItem(e,book));\r\n  };\r\n\r\n  return (\r\n    <div className=\"cartBody\">\r\n      <div className=\"cartContainer\">\r\n        My Cart ({props.cartBooks.length})\r\n        <CartBooks />\r\n        {detailForm ? (\r\n          \"\"\r\n        ) : (\r\n          <div className=\"blockButton\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.placeButton}\r\n              onClick={() => setDetailForm(true)}\r\n            >\r\n              PLACE ORDER\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"cartContainer\">\r\n        Customer Details\r\n        {detailForm ? (\r\n          <>\r\n            <span className=\"inlineField\">\r\n              <div className=\"inputField\">\r\n                Full Name\r\n                <TextField\r\n                  value={name}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  error={nameFlag}\r\n                  helperText={nameError}\r\n                  fullWidth\r\n                  className={classes.input}\r\n                />\r\n              </div>\r\n              <div className=\"inputField\">\r\n                Mobile Number\r\n                <TextField\r\n                  value={mobile}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setMobile(e.target.value)}\r\n                  error={mobileFlag}\r\n                  helperText={mobileError}\r\n                  fullWidth\r\n                  className={classes.input}\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n            </span>\r\n            <span className=\"inlineField\">\r\n              <div className=\"inputAdderssField\">\r\n                Address\r\n                <TextField\r\n                  value={address}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  error={addressFlag}\r\n                  helperText={addressError}\r\n                  fullWidth\r\n                  multiline\r\n                  className={classes.inputAddress}\r\n                />\r\n              </div>\r\n            </span>\r\n            <span className=\"inlineField\">\r\n              <div className=\"inputField\">\r\n                City/Town\r\n                <TextField\r\n                  value={city}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                  error={cityFlag}\r\n                  helperText={cityError}\r\n                  fullWidth\r\n                  className={classes.input}\r\n                />\r\n              </div>\r\n              <div className=\"inputField\">\r\n                State\r\n                <TextField\r\n                  value={state}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setState(e.target.value)}\r\n                  error={stateFlag}\r\n                  helperText={stateError}\r\n                  fullWidth\r\n                  className={classes.input}\r\n                />\r\n              </div>\r\n            </span>\r\n            <span className=\"inlineField\">\r\n              <div className=\"inputField\">\r\n                Type\r\n                <FormControl component=\"fieldset\">\r\n                  <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={classes.radioGroup}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"Home\"\r\n                      control={<Radio />}\r\n                      label=\"Home\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"Work\"\r\n                      control={<Radio />}\r\n                      label=\"Work\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"Other\"\r\n                      control={<Radio />}\r\n                      label=\"Other\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n            </span>\r\n            {summaryField ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"blockButton\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.placeButton}\r\n                  onClick={Continue}\r\n                >\r\n                  CONTINUE\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"cartContainer\">\r\n        Order Summary\r\n        {summaryField ? (\r\n          <>\r\n            <CheckoutItem />\r\n            <div className=\"blockButton\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={checkout}\r\n                className={classes.placeButton}\r\n              >\r\n                CHECKOUT\r\n              </Button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Services\\axoisServices.js",[],"E:\\Bridgelabz\\Projects\\BookShop\\book-shop-ui\\src\\Components\\Pagination\\Pagination.jsx",["90"],"import React from \"react\";\r\nimport Paginations from \"@material-ui/lab/Pagination\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport './pagination.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paginateIcon: {\r\n    backgroundColor: \"#A03037\",\r\n    color: \"#ffff\",\r\n  },\r\n}));\r\n\r\nexport default function Pagination({ postsPerPage, totalPosts, paginate }) {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event, value) => {\r\n    paginate(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"paginationBlock\">\r\n      <Paginations\r\n        count={Math.floor(totalPosts / postsPerPage + 1)}\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":12},{"ruleId":"95","severity":1,"message":"99","line":2,"column":36,"nodeType":"97","messageId":"98","endLine":2,"endColumn":44},{"ruleId":"95","severity":1,"message":"100","line":27,"column":10,"nodeType":"97","messageId":"98","endLine":27,"endColumn":14},{"ruleId":"95","severity":1,"message":"101","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":116,"column":15,"nodeType":"104","endLine":116,"endColumn":63},{"ruleId":"105","severity":1,"message":"106","line":69,"column":6,"nodeType":"107","endLine":69,"endColumn":8,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":91,"column":5,"nodeType":"111","messageId":"112","endLine":107,"endColumn":6},{"ruleId":"113","severity":1,"message":"114","line":161,"column":41,"nodeType":"115","messageId":"116","endLine":161,"endColumn":43},{"ruleId":"95","severity":1,"message":"117","line":65,"column":10,"nodeType":"97","messageId":"98","endLine":65,"endColumn":15},{"ruleId":"95","severity":1,"message":"118","line":65,"column":17,"nodeType":"97","messageId":"98","endLine":65,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":131,"column":50,"nodeType":"121","messageId":"122","endLine":131,"endColumn":52},{"ruleId":"119","severity":1,"message":"120","line":136,"column":41,"nodeType":"121","messageId":"122","endLine":136,"endColumn":43},{"ruleId":"119","severity":1,"message":"120","line":141,"column":44,"nodeType":"121","messageId":"122","endLine":141,"endColumn":46},{"ruleId":"113","severity":1,"message":"114","line":231,"column":32,"nodeType":"115","messageId":"116","endLine":231,"endColumn":34},{"ruleId":"95","severity":1,"message":"123","line":14,"column":9,"nodeType":"97","messageId":"98","endLine":14,"endColumn":16},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'show' is assigned a value but never used.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getAllBooks'. Either include it or remove the dependency array.","ArrayExpression",["126"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'books' is assigned a value but never used.","'setBooks' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [getAllBooks]",{"range":"129","text":"130"},[1792,1794],"[getAllBooks]"]